@using BtsPortal.Entities.Bts
@model List<BtsPortal.Entities.Bts.BtsHost>
@{
    var servers = (List<string>)ViewBag.Servers;
    servers.Sort();

}
<h3>
    Hosts
    &nbsp;&nbsp;
    <a class="btn btn-sm btn-primary" href="#" onclick="loadHosts()"><i class="fa fa-refresh fa-fw" aria-hidden="true"></i>&nbsp; Refresh</a>
</h3>
<div class="container pull-left" style="width: 90%">
    <table class="table table-striped table-responsive fontSize12">
        <tr>
            <th>Host</th>
            @foreach (var server in servers)
            {
                <th>@server</th>
            }
            <th></th>
        </tr>
        @foreach (var host in Model.Where(m => !string.IsNullOrEmpty(m.Name)).OrderBy(m => m.Name))
        {
            <tr title="@host.HostMetadata">
                <td>
                    @host.Name
                </td>
                @foreach (var server in servers)
                {
                    BtsHostInstanceStatus status;
                    if (host.HostInstances == null)
                    {
                        status = BtsHostInstanceStatus.NotConfigured;
                    }
                    else
                    {
                        status = (from hostInstance in host.HostInstances
                            where hostInstance.Server == server
                            select hostInstance.HostInstanceStatus).FirstOrDefault();
                    }

                    <td title="@status.ToString()">
                        @if (status == BtsHostInstanceStatus.Started)
                        {
                            <i class="fa fa-check-circle fa-2" style="color: green"></i>
                        }
                        else if (status == BtsHostInstanceStatus.Stopped)
                        {
                            <i class="fa fa-exclamation-circle fa-2" aria-hidden="true" style="color: red"></i>
                        }
                        else if (status == BtsHostInstanceStatus.Disabled)
                        {
                            <i class="fa fa-exclamation-circle fa-2" aria-hidden="true" style="color: red"></i>
                        }
                        else if (status == BtsHostInstanceStatus.NotConfigured)
                        {
                            <i class="fa fa-exclamation-triangle fa-2" aria-hidden="true" style="color: red"></i>
                        }
                    </td>
                }
                <td>
                    <a class="btn btn-default btn-xs" href="#" onclick="hostOperation('@BtsArtifactAction.Start', '@host.Name')">
                        <i class="fa fa-check-circle fa-2" style="color: green"></i> Start
                    </a>
                    <a class="btn btn-default btn-xs" href="#" onclick="hostOperation('@BtsArtifactAction.Stop', '@host.Name')">
                        <i class="fa fa-check-circle fa-2" aria-hidden="true" style="color: red"></i> Stop
                    </a>
                    <a class="btn btn-default btn-xs" href="#" onclick="hostOperation('@BtsArtifactAction.Restart', '@host.Name')">
                        <i class="fa fa-check-circle fa-2" aria-hidden="true" style="color: blue"></i> Restart
                    </a>
                </td>
            </tr>
        }
    </table>
</div>

<input type="hidden" id="hostOpUrl" value="@Url.Action("Host","BtsOps")" />
